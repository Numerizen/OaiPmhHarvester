<?php

namespace DoctrineProxies\__CG__\OaiPmhHarvester\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class OaiPmhHarvesterHarvestJob extends \OaiPmhHarvester\Entity\OaiPmhHarvesterHarvestJob implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'id', 'job', 'undoJob', 'comment', 'has_err', 'resource_type', 'collection_id', 'base_url', 'metadata_prefix', 'set_spec', 'set_name', 'set_description', 'initiated', 'completed', 'start_from', 'resumption_token'];
        }

        return ['__isInitialized__', 'id', 'job', 'undoJob', 'comment', 'has_err', 'resource_type', 'collection_id', 'base_url', 'metadata_prefix', 'set_spec', 'set_name', 'set_description', 'initiated', 'completed', 'start_from', 'resumption_token'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (OaiPmhHarvesterHarvestJob $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setJob(\Omeka\Entity\Job $job)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setJob', [$job]);

        return parent::setJob($job);
    }

    /**
     * {@inheritDoc}
     */
    public function getJob()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getJob', []);

        return parent::getJob();
    }

    /**
     * {@inheritDoc}
     */
    public function setUndoJob(\Omeka\Entity\Job $job)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUndoJob', [$job]);

        return parent::setUndoJob($job);
    }

    /**
     * {@inheritDoc}
     */
    public function getUndoJob()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUndoJob', []);

        return parent::getUndoJob();
    }

    /**
     * {@inheritDoc}
     */
    public function setComment($comment)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setComment', [$comment]);

        return parent::setComment($comment);
    }

    /**
     * {@inheritDoc}
     */
    public function getComment()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getComment', []);

        return parent::getComment();
    }

    /**
     * {@inheritDoc}
     */
    public function setHasErr($hasErr)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHasErr', [$hasErr]);

        return parent::setHasErr($hasErr);
    }

    /**
     * {@inheritDoc}
     */
    public function setResourceType($resourceType)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setResourceType', [$resourceType]);

        return parent::setResourceType($resourceType);
    }

    /**
     * {@inheritDoc}
     */
    public function getResourceType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getResourceType', []);

        return parent::getResourceType();
    }

    /**
     * {@inheritDoc}
     */
    public function getHasErr()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHasErr', []);

        return parent::getHasErr();
    }

    /**
     * {@inheritDoc}
     */
    public function getCollectionId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCollectionId', []);

        return parent::getCollectionId();
    }

    /**
     * {@inheritDoc}
     */
    public function getBaseUrl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBaseUrl', []);

        return parent::getBaseUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function getMetadataPrefix()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMetadataPrefix', []);

        return parent::getMetadataPrefix();
    }

    /**
     * {@inheritDoc}
     */
    public function getSetSpec()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSetSpec', []);

        return parent::getSetSpec();
    }

    /**
     * {@inheritDoc}
     */
    public function getSetName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSetName', []);

        return parent::getSetName();
    }

    /**
     * {@inheritDoc}
     */
    public function getSetDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSetDescription', []);

        return parent::getSetDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function getInitiated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInitiated', []);

        return parent::getInitiated();
    }

    /**
     * {@inheritDoc}
     */
    public function getCompleted()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCompleted', []);

        return parent::getCompleted();
    }

    /**
     * {@inheritDoc}
     */
    public function getStartFrom()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStartFrom', []);

        return parent::getStartFrom();
    }

    /**
     * {@inheritDoc}
     */
    public function getResumptionToken()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getResumptionToken', []);

        return parent::getResumptionToken();
    }

    /**
     * {@inheritDoc}
     */
    public function setCollectionId($collection_id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCollectionId', [$collection_id]);

        return parent::setCollectionId($collection_id);
    }

    /**
     * {@inheritDoc}
     */
    public function setBaseUrl($baseUrl)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBaseUrl', [$baseUrl]);

        return parent::setBaseUrl($baseUrl);
    }

    /**
     * {@inheritDoc}
     */
    public function setMetadataPrefix($metadata_prefix)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMetadataPrefix', [$metadata_prefix]);

        return parent::setMetadataPrefix($metadata_prefix);
    }

    /**
     * {@inheritDoc}
     */
    public function setSetSpec($set_spec)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSetSpec', [$set_spec]);

        return parent::setSetSpec($set_spec);
    }

    /**
     * {@inheritDoc}
     */
    public function setSetName($set_name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSetName', [$set_name]);

        return parent::setSetName($set_name);
    }

    /**
     * {@inheritDoc}
     */
    public function setSetDescription($set_description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSetDescription', [$set_description]);

        return parent::setSetDescription($set_description);
    }

    /**
     * {@inheritDoc}
     */
    public function setInitiated($initiated)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInitiated', [$initiated]);

        return parent::setInitiated($initiated);
    }

    /**
     * {@inheritDoc}
     */
    public function setCompleted($completed)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCompleted', [$completed]);

        return parent::setCompleted($completed);
    }

    /**
     * {@inheritDoc}
     */
    public function setStartFrom($start_from)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStartFrom', [$start_from]);

        return parent::setStartFrom($start_from);
    }

    /**
     * {@inheritDoc}
     */
    public function setResumptionToken($resumption_token)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setResumptionToken', [$resumption_token]);

        return parent::setResumptionToken($resumption_token);
    }

    /**
     * {@inheritDoc}
     */
    public function getResourceId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getResourceId', []);

        return parent::getResourceId();
    }

}
