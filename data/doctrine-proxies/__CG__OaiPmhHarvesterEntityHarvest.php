<?php

namespace DoctrineProxies\__CG__\OaiPmhHarvester\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Harvest extends \OaiPmhHarvester\Entity\Harvest implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'id', 'job', 'undoJob', 'comment', 'endpoint', 'resourceType', 'itemSet', 'metadataPrefix', 'setSpec', 'setName', 'setDescription', 'hasErr', 'stats', 'resumptionToken'];
        }

        return ['__isInitialized__', 'id', 'job', 'undoJob', 'comment', 'endpoint', 'resourceType', 'itemSet', 'metadataPrefix', 'setSpec', 'setName', 'setDescription', 'hasErr', 'stats', 'resumptionToken'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Harvest $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setJob(\Omeka\Entity\Job $job)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setJob', [$job]);

        return parent::setJob($job);
    }

    /**
     * {@inheritDoc}
     */
    public function getJob()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getJob', []);

        return parent::getJob();
    }

    /**
     * {@inheritDoc}
     */
    public function setUndoJob(\Omeka\Entity\Job $job)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUndoJob', [$job]);

        return parent::setUndoJob($job);
    }

    /**
     * {@inheritDoc}
     */
    public function getUndoJob()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUndoJob', []);

        return parent::getUndoJob();
    }

    /**
     * {@inheritDoc}
     */
    public function setComment($comment)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setComment', [$comment]);

        return parent::setComment($comment);
    }

    /**
     * {@inheritDoc}
     */
    public function getComment()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getComment', []);

        return parent::getComment();
    }

    /**
     * {@inheritDoc}
     */
    public function setEndpoint($endpoint)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEndpoint', [$endpoint]);

        return parent::setEndpoint($endpoint);
    }

    /**
     * {@inheritDoc}
     */
    public function getEndpoint()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEndpoint', []);

        return parent::getEndpoint();
    }

    /**
     * {@inheritDoc}
     */
    public function setResourceType($resourceType)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setResourceType', [$resourceType]);

        return parent::setResourceType($resourceType);
    }

    /**
     * {@inheritDoc}
     */
    public function getResourceType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getResourceType', []);

        return parent::getResourceType();
    }

    /**
     * {@inheritDoc}
     */
    public function setItemSet(\Omeka\Entity\ItemSet $itemSet = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setItemSet', [$itemSet]);

        return parent::setItemSet($itemSet);
    }

    /**
     * {@inheritDoc}
     */
    public function getItemSet()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getItemSet', []);

        return parent::getItemSet();
    }

    /**
     * {@inheritDoc}
     */
    public function setMetadataPrefix($metadataPrefix)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMetadataPrefix', [$metadataPrefix]);

        return parent::setMetadataPrefix($metadataPrefix);
    }

    /**
     * {@inheritDoc}
     */
    public function getMetadataPrefix()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMetadataPrefix', []);

        return parent::getMetadataPrefix();
    }

    /**
     * {@inheritDoc}
     */
    public function setSetSpec($setSpec)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSetSpec', [$setSpec]);

        return parent::setSetSpec($setSpec);
    }

    /**
     * {@inheritDoc}
     */
    public function getSetSpec()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSetSpec', []);

        return parent::getSetSpec();
    }

    /**
     * {@inheritDoc}
     */
    public function setSetName($setName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSetName', [$setName]);

        return parent::setSetName($setName);
    }

    /**
     * {@inheritDoc}
     */
    public function getSetName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSetName', []);

        return parent::getSetName();
    }

    /**
     * {@inheritDoc}
     */
    public function setSetDescription($setDescription)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSetDescription', [$setDescription]);

        return parent::setSetDescription($setDescription);
    }

    /**
     * {@inheritDoc}
     */
    public function getSetDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSetDescription', []);

        return parent::getSetDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setHasErr($hasErr)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHasErr', [$hasErr]);

        return parent::setHasErr($hasErr);
    }

    /**
     * {@inheritDoc}
     */
    public function getHasErr()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHasErr', []);

        return parent::getHasErr();
    }

    /**
     * {@inheritDoc}
     */
    public function setStats($stats)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStats', [$stats]);

        return parent::setStats($stats);
    }

    /**
     * {@inheritDoc}
     */
    public function getStats()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStats', []);

        return parent::getStats();
    }

    /**
     * {@inheritDoc}
     */
    public function setResumptionToken($resumptionToken)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setResumptionToken', [$resumptionToken]);

        return parent::setResumptionToken($resumptionToken);
    }

    /**
     * {@inheritDoc}
     */
    public function getResumptionToken()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getResumptionToken', []);

        return parent::getResumptionToken();
    }

    /**
     * {@inheritDoc}
     */
    public function getResourceId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getResourceId', []);

        return parent::getResourceId();
    }

}
